name: Tests

on:
  workflow_call:
    inputs:
      python-version:
        required: true
        type: string
      working-directory:
        required: false
        type: string
        default: .

jobs:

  test:
    runs-on: ubuntu-latest
    env:
      PYTHON_VERSION: ${{ inputs.python-version }}
    steps:
        - name: Checkout
          uses: actions/checkout@v4

        - name: Install the latest version of uv
          uses: astral-sh/setup-uv@v5
          with:
            python-version: ${{ env.PYTHON_VERSION }}
            enable-cache: false

        - name: Restore uv cache
          uses: actions/cache@v4
          with:
            path: ${{ env.UV_CACHE_DIR }}
            key: uv-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('uv.lock') }}
            restore-keys: |
              uv-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('uv.lock') }}
              uv-${{ runner.os }}-${{ env.PYTHON_VERSION }}

        - name: Run tests
          run: |
            make test

  coverage:
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
        - name: Checkout
          uses: actions/checkout@v4

        - name: Install the latest version of uv
          uses: astral-sh/setup-uv@v5
          with:
            python-version: ${{ inputs.python-version }}
            enable-cache: false

        - name: Restore uv cache
          uses: actions/cache@v4
          with:
            path: /tmp/.uv-cache
            key: uv-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('uv.lock') }}
            restore-keys: |
              uv-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('uv.lock') }}
              uv-${{ runner.os }}-${{ env.PYTHON_VERSION }}

        - name: Run tests
          run: |
            make test-cov

        - name: Report Coverage
          run: |
            echo "# Coverage Report" >> $GITHUB_STEP_SUMMARY
            echo "$(uv run coverage report --format markdown)" >> $GITHUB_STEP_SUMMARY
